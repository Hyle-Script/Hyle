// Generated by CoffeeScript 1.10.0
Hyle.Parser = (function() {
  function Parser() {
    this.data = null;
    this.cache = {
      content: {}
    };
    this.fileItemsCollection = new Hyle.FileItemsCollection;
    this.folderItemsCollection = new Hyle.FolderItemsCollection;
    this.compositionItemsCollection = new Hyle.CompositionItemsCollection;
    this.layersCollection = new Hyle.LayersCollection;
    this.fileItemsFactory = new Object;
    this.folderItemsFactory = new Object;
    this.compositionItemsFactory = new Object;
    this.layersFactory = new Object;
  }

  Parser.prototype.parse = function(data) {
    this.data = this.parseYaml(data);
    return this.processData();
  };

  Parser.prototype.processData = function() {
    this.processRootData();
    return this.finishProcess();
  };

  Parser.prototype.processRootData = function() {
    if (this.data) {
      if (this.data.folders) {
        this.createFolders(this.data.folders);
      }
      this.createFileImports(this.data.files);
      if (this.data.compositions) {
        this.createCompositions(this.data.compositions);
      }
      if (this.data.layers) {
        return this.createLayers(this.data.layers);
      }
    }
  };

  Parser.prototype.preParseYaml = function(yaml) {
    yaml = yaml.replace(/\t/g, "  ");
    yaml = yaml.replace(/(color ?(.+)?): ([0-9]{6})/gi, "$1: '$3'");
    yaml = yaml.replace(/: ?([0-9\.]+[^0-9\n\r]{2,})/gi, ": '$1'");
    yaml = yaml.replace(/\{\{|\}\}/g, "%%");
    yaml = yaml.replace(/null/g, "'Null'");
    return yaml;
  };

  Parser.prototype.parseYaml = function(yaml) {
    yaml = this.preParseYaml(yaml);
    yaml = hyle.yaml.parse(yaml);
    return yaml;
  };

  Parser.prototype.finishProcess = function() {};

  Parser.prototype.createFileImports = function(filesData) {
    if (filesData == null) {
      filesData = [];
    }
    return this.fileItemsFactory = new Hyle.FileItemsFactory(filesData);
  };

  Parser.prototype.createFolders = function(foldersData) {
    return this.folderItemsFactory = new Hyle.FolderItemsFactory(foldersData);
  };

  Parser.prototype.createCompositions = function(compositionsData) {
    return this.compositionItemsFactory = new Hyle.CompositionItemsFactory(compositionsData);
  };

  Parser.prototype.createLayers = function(layersData) {
    return this.layersFactory = new Hyle.LayersFactory(layersData);
  };

  return Parser;

})();
