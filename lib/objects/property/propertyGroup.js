// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Hyle.PropertyGroup = (function(superClass) {
  extend(PropertyGroup, superClass);

  function PropertyGroup(data) {
    this.data = data;
  }

  PropertyGroup.prototype.applyTo = function(object) {
    return this.apply(object, this.data);
  };

  return PropertyGroup;

})(Hyle.Object);
