// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hyle.LayerInterpretor = (function(_super) {
  __extends(LayerInterpretor, _super);

  function LayerInterpretor(layer) {
    this.layer = layer;
    this.ignoredProperties = ["nullLayer", "adjustmentLayer"];
    LayerInterpretor.__super__.constructor.apply(this, arguments);
  }

  LayerInterpretor.prototype.compact = function() {
    this.data = LayerInterpretor.__super__.compact.call(this, this.layer);
    this.interpretLayerType();
    if (this.hasEffects()) {
      this.interpretLayerEffects();
    }
    return this.data;
  };

  LayerInterpretor.prototype.interpretLayerType = function() {
    var type;
    type = "";
    if (this.layer.adjustmentLayer) {
      type = "adjustment";
    } else if (this.layer instanceof CameraLayer) {
      type = "camera";
    } else if (this.layer instanceof LightLayer) {
      type = "light";
    } else if (this.layer instanceof ShapeLayer) {
      type = "shape";
    } else if (this.layer instanceof TextLayer) {
      type = "text";
    } else if (this.layer.nullLayer) {
      type = "null";
    } else if (this.layer.source) {
      if (this.layer.source.frameDuration < 1) {
        type = "file";
      } else {
        type = "solid";
      }
    }
    return this.data.type = type;
  };

  LayerInterpretor.prototype.hasEffects = function() {
    var r;
    r = false;
    if (this.layer.Effects) {
      if (this.layer.Effects.numProperties > 0) {
        r = true;
      }
    }
    return r;
  };

  LayerInterpretor.prototype.interpretLayerEffects = function() {
    var effectInterpretor, i, _i, _ref, _results;
    this.data.effects = [];
    _results = [];
    for (i = _i = 1, _ref = this.layer.Effects.numProperties; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
      effectInterpretor = new Hyle.EffectInterpretor(this.layer.Effects.property(i));
      _results.push(this.data.effects.push(effectInterpretor.compact()));
    }
    return _results;
  };

  return LayerInterpretor;

})(Hyle.Layer);
