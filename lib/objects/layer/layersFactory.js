// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Hyle.LayersFactory = (function(_super) {
  __extends(LayersFactory, _super);

  function LayersFactory(layersData, composition) {
    if (composition == null) {
      composition = null;
    }
    this.layersData = layersData;
    this.layersCollection = hyle.parser.layersCollection;
    this.composition = composition;
    this.createLayers();
    this;
  }

  LayersFactory.prototype.createLayers = function() {
    var layer, layerData, _i, _len, _ref, _results;
    _ref = this.layersData;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      layerData = _ref[_i];
      if (layerData.inherit) {
        layerData = this.inherit(layerData);
      }
      layerData.AVCompItemTarget = this.getComposition(layerData);
      layer = this.createLayer(layerData);
      _results.push(this.layersCollection.add(layer));
    }
    return _results;
  };

  LayersFactory.prototype.createLayer = function(data) {
    var layer;
    data.type || (data.type = "Solid");
    switch (data.type.capitalize()) {
      case "Solid":
        layer = new Hyle.SolidLayerInstance(data);
        break;
      case "Adjustment":
        layer = new Hyle.AdjustmentLayerInstance(data);
        break;
      case "Null":
        layer = new Hyle.NullLayerInstance(data);
        break;
      case "Light":
        layer = new Hyle.LightLayerInstance(data);
        break;
      case "Camera":
        layer = new Hyle.CameraLayerInstance(data);
        break;
      case "Shape":
        layer = new Hyle.ShapeLayerInstance(data);
        break;
      case "Text":
        layer = new Hyle.TextLayerInstance(data);
        break;
      case "File":
        layer = new Hyle.FileLayerInstance(data);
        break;
      default:
        logError("The layer type “" + data.type + "” is unknown.");
    }
    layer.render();
    return layer;
  };

  LayersFactory.prototype.inherit = function(data) {
    var propertyName, propertyValue, target, _ref;
    target = this.layersCollection.find(data.inherit);
    _ref = target.sourceData;
    for (propertyName in _ref) {
      propertyValue = _ref[propertyName];
      if (propertyName !== "id") {
        data[propertyName] || (data[propertyName] = propertyValue);
      }
    }
    return data;
  };

  LayersFactory.prototype.getComposition = function(data) {
    var target;
    return target = (function() {
      if (data.composition) {
        return data.composition;
      } else if (this.composition) {
        return this.composition;
      } else {
        try {
          return app.project.activeItem;
        } catch (_error) {
          return alert("Layer " + this.name + " does not have a parent composition. Use the “composition” property to define one.");
        }
      }
    })();
  };

  return LayersFactory;

})(Hyle.Factory);
